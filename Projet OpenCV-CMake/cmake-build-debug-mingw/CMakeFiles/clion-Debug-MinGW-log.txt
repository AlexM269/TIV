"C:\Program Files\JetBrains\CLion 2022.3.3\bin\cmake\win\x64\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2022.3.3/bin/ninja/win/x64/ninja.exe" -G Ninja -S "C:\Users\Alexandre DEPRUGNEY\Documents\GitHub\TIV\Projet OpenCV-CMake" -B "C:\Users\Alexandre DEPRUGNEY\Documents\GitHub\TIV\Projet OpenCV-CMake\cmake-build-debug-mingw"
-- The C compiler identification is GNU 13.1.0
-- The CXX compiler identification is GNU 13.1.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/Program Files/JetBrains/CLion 2022.3.3/bin/mingw/bin/gcc.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files/JetBrains/CLion 2022.3.3/bin/mingw/bin/g++.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- OpenCV ARCH: x64
-- OpenCV RUNTIME: mingw
-- OpenCV STATIC: OFF
-- Found OpenCV: C:/Users/Alexandre DEPRUGNEY/Documents/4INFO/Traitement vidéo/Projet/OpenCV-MinGW-Build-OpenCV-4.5.5-x64 (found version "4.5.5") 
-- Found OpenCV 4.5.5 in C:/Users/Alexandre DEPRUGNEY/Documents/4INFO/Traitement vidéo/Projet/OpenCV-MinGW-Build-OpenCV-4.5.5-x64/x64/mingw/lib
-- You might need to add C:\Users\Alexandre DEPRUGNEY\Documents\4INFO\Traitement vidéo\Projet\OpenCV-MinGW-Build-OpenCV-4.5.5-x64\x64\mingw\bin to your PATH to be able to run your applications.
-- Configuring done (6.9s)
-- Generating done (0.1s)
-- Build files have been written to: C:/Users/Alexandre DEPRUGNEY/Documents/GitHub/TIV/Projet OpenCV-CMake/cmake-build-debug-mingw
